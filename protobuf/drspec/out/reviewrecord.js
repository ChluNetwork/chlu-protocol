/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.ReviewRecord');
goog.provide('proto.ReviewRecord.Author');
goog.provide('proto.ReviewRecord.DetailedReview');
goog.provide('proto.ReviewRecord.Location');
goog.provide('proto.ReviewRecord.Platform');
goog.provide('proto.ReviewRecord.Review');
goog.provide('proto.ReviewRecord.Subject');
goog.provide('proto.ReviewRecord.Verification');
goog.provide('proto.ReviewRecord.Verification.Method');
goog.provide('proto.ReviewRecord.Verification.Proof');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.PoPR');
goog.require('proto.Rating');
goog.require('proto.Signature');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ReviewRecord.repeatedFields_, null);
};
goog.inherits(proto.ReviewRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.displayName = 'proto.ReviewRecord';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ReviewRecord.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencySymbol: jspb.Message.getField(msg, 1),
    amount: jspb.Message.getField(msg, 2),
    customerAddress: jspb.Message.getField(msg, 3),
    vendorAddress: jspb.Message.getField(msg, 4),
    obsoleteReviewText: jspb.Message.getField(msg, 5),
    obsoleteRating: jspb.Message.getField(msg, 6),
    detailedReviewList: jspb.Message.toObjectList(msg.getDetailedReviewList(),
    proto.ReviewRecord.DetailedReview.toObject, includeInstance),
    popr: (f = msg.getPopr()) && proto.PoPR.toObject(includeInstance, f),
    chluVersion: jspb.Message.getField(msg, 9),
    lastReviewrecordMultihash: jspb.Message.getField(msg, 11),
    hash: jspb.Message.getField(msg, 12),
    signature: jspb.Message.getField(msg, 13),
    keyLocation: jspb.Message.getField(msg, 14),
    previousVersionMultihash: jspb.Message.getField(msg, 15),
    obsoleteCustomerDidId: jspb.Message.getField(msg, 16),
    id: jspb.Message.getField(msg, 17),
    issued: jspb.Message.getField(msg, 18),
    issuer: jspb.Message.getField(msg, 19),
    subject: (f = msg.getSubject()) && proto.ReviewRecord.Subject.toObject(includeInstance, f),
    platform: (f = msg.getPlatform()) && proto.ReviewRecord.Platform.toObject(includeInstance, f),
    author: (f = msg.getAuthor()) && proto.ReviewRecord.Author.toObject(includeInstance, f),
    review: (f = msg.getReview()) && proto.ReviewRecord.Review.toObject(includeInstance, f),
    ratingDetails: (f = msg.getRatingDetails()) && proto.Rating.toObject(includeInstance, f),
    verifiable: jspb.Message.getField(msg, 25),
    verification: (f = msg.getVerification()) && proto.ReviewRecord.Verification.toObject(includeInstance, f),
    issuerSignature: (f = msg.getIssuerSignature()) && proto.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord}
 */
proto.ReviewRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord;
  return proto.ReviewRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord}
 */
proto.ReviewRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencySymbol(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObsoleteReviewText(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setObsoleteRating(value);
      break;
    case 7:
      var value = new proto.ReviewRecord.DetailedReview;
      reader.readMessage(value,proto.ReviewRecord.DetailedReview.deserializeBinaryFromReader);
      msg.addDetailedReview(value);
      break;
    case 8:
      var value = new proto.PoPR;
      reader.readMessage(value,proto.PoPR.deserializeBinaryFromReader);
      msg.setPopr(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChluVersion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastReviewrecordMultihash(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyLocation(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousVersionMultihash(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setObsoleteCustomerDidId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIssued(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 20:
      var value = new proto.ReviewRecord.Subject;
      reader.readMessage(value,proto.ReviewRecord.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 21:
      var value = new proto.ReviewRecord.Platform;
      reader.readMessage(value,proto.ReviewRecord.Platform.deserializeBinaryFromReader);
      msg.setPlatform(value);
      break;
    case 22:
      var value = new proto.ReviewRecord.Author;
      reader.readMessage(value,proto.ReviewRecord.Author.deserializeBinaryFromReader);
      msg.setAuthor(value);
      break;
    case 23:
      var value = new proto.ReviewRecord.Review;
      reader.readMessage(value,proto.ReviewRecord.Review.deserializeBinaryFromReader);
      msg.setReview(value);
      break;
    case 24:
      var value = new proto.Rating;
      reader.readMessage(value,proto.Rating.deserializeBinaryFromReader);
      msg.setRatingDetails(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifiable(value);
      break;
    case 26:
      var value = new proto.ReviewRecord.Verification;
      reader.readMessage(value,proto.ReviewRecord.Verification.deserializeBinaryFromReader);
      msg.setVerification(value);
      break;
    case 27:
      var value = new proto.Signature;
      reader.readMessage(value,proto.Signature.deserializeBinaryFromReader);
      msg.setIssuerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getDetailedReviewList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ReviewRecord.DetailedReview.serializeBinaryToWriter
    );
  }
  f = message.getPopr();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.PoPR.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.ReviewRecord.Subject.serializeBinaryToWriter
    );
  }
  f = message.getPlatform();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.ReviewRecord.Platform.serializeBinaryToWriter
    );
  }
  f = message.getAuthor();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.ReviewRecord.Author.serializeBinaryToWriter
    );
  }
  f = message.getReview();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.ReviewRecord.Review.serializeBinaryToWriter
    );
  }
  f = message.getRatingDetails();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.Rating.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getVerification();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.ReviewRecord.Verification.serializeBinaryToWriter
    );
  }
  f = message.getIssuerSignature();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.Signature.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.DetailedReview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.DetailedReview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.DetailedReview.displayName = 'proto.ReviewRecord.DetailedReview';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.DetailedReview.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.DetailedReview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.DetailedReview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.DetailedReview.toObject = function(includeInstance, msg) {
  var f, obj = {
    attribute: jspb.Message.getField(msg, 1),
    reviewText: jspb.Message.getField(msg, 2),
    rating: (f = msg.getRating()) && proto.Rating.toObject(includeInstance, f),
    category: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.DetailedReview}
 */
proto.ReviewRecord.DetailedReview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.DetailedReview;
  return proto.ReviewRecord.DetailedReview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.DetailedReview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.DetailedReview}
 */
proto.ReviewRecord.DetailedReview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttribute(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewText(value);
      break;
    case 3:
      var value = new proto.Rating;
      reader.readMessage(value,proto.Rating.deserializeBinaryFromReader);
      msg.setRating(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.DetailedReview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.DetailedReview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.DetailedReview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.DetailedReview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRating();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Rating.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * required string attribute = 1;
 * @return {string}
 */
proto.ReviewRecord.DetailedReview.prototype.getAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.DetailedReview.prototype.setAttribute = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.DetailedReview.prototype.clearAttribute = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.DetailedReview.prototype.hasAttribute = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string review_text = 2;
 * @return {string}
 */
proto.ReviewRecord.DetailedReview.prototype.getReviewText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.DetailedReview.prototype.setReviewText = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.DetailedReview.prototype.clearReviewText = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.DetailedReview.prototype.hasReviewText = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required Rating rating = 3;
 * @return {!proto.Rating}
 */
proto.ReviewRecord.DetailedReview.prototype.getRating = function() {
  return /** @type{!proto.Rating} */ (
    jspb.Message.getWrapperField(this, proto.Rating, 3, 1));
};


/** @param {!proto.Rating} value */
proto.ReviewRecord.DetailedReview.prototype.setRating = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ReviewRecord.DetailedReview.prototype.clearRating = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.DetailedReview.prototype.hasRating = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string category = 4;
 * @return {string}
 */
proto.ReviewRecord.DetailedReview.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ReviewRecord.DetailedReview.prototype.setCategory = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.ReviewRecord.DetailedReview.prototype.clearCategory = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.DetailedReview.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Location.displayName = 'proto.ReviewRecord.Location';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: +jspb.Message.getField(msg, 1),
    lng: +jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Location}
 */
proto.ReviewRecord.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Location;
  return proto.ReviewRecord.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Location}
 */
proto.ReviewRecord.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLng(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * required float lat = 1;
 * @return {number}
 */
proto.ReviewRecord.Location.prototype.getLat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.ReviewRecord.Location.prototype.setLat = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Location.prototype.clearLat = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Location.prototype.hasLat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required float lng = 2;
 * @return {number}
 */
proto.ReviewRecord.Location.prototype.getLng = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ReviewRecord.Location.prototype.setLng = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Location.prototype.clearLng = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Location.prototype.hasLng = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Subject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ReviewRecord.Subject.repeatedFields_, null);
};
goog.inherits(proto.ReviewRecord.Subject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Subject.displayName = 'proto.ReviewRecord.Subject';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ReviewRecord.Subject.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Subject.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Subject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Subject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Subject.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    address: jspb.Message.getField(msg, 3),
    telephone: jspb.Message.getField(msg, 4),
    categoriesList: jspb.Message.getRepeatedField(msg, 5),
    location: (f = msg.getLocation()) && proto.ReviewRecord.Location.toObject(includeInstance, f),
    url: jspb.Message.getField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Subject}
 */
proto.ReviewRecord.Subject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Subject;
  return proto.ReviewRecord.Subject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Subject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Subject}
 */
proto.ReviewRecord.Subject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelephone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    case 6:
      var value = new proto.ReviewRecord.Location;
      reader.readMessage(value,proto.ReviewRecord.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Subject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Subject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Subject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Subject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ReviewRecord.Location.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * required string did = 1;
 * @return {string}
 */
proto.ReviewRecord.Subject.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.Subject.prototype.setDid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Subject.prototype.clearDid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasDid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ReviewRecord.Subject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Subject.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Subject.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.ReviewRecord.Subject.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ReviewRecord.Subject.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.ReviewRecord.Subject.prototype.clearAddress = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string telephone = 4;
 * @return {string}
 */
proto.ReviewRecord.Subject.prototype.getTelephone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ReviewRecord.Subject.prototype.setTelephone = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.ReviewRecord.Subject.prototype.clearTelephone = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasTelephone = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string categories = 5;
 * @return {!Array<string>}
 */
proto.ReviewRecord.Subject.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.ReviewRecord.Subject.prototype.setCategoriesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.ReviewRecord.Subject.prototype.addCategories = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.ReviewRecord.Subject.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * optional Location location = 6;
 * @return {?proto.ReviewRecord.Location}
 */
proto.ReviewRecord.Subject.prototype.getLocation = function() {
  return /** @type{?proto.ReviewRecord.Location} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Location, 6));
};


/** @param {?proto.ReviewRecord.Location|undefined} value */
proto.ReviewRecord.Subject.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.ReviewRecord.Subject.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.ReviewRecord.Subject.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ReviewRecord.Subject.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.ReviewRecord.Subject.prototype.clearUrl = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Subject.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Platform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Platform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Platform.displayName = 'proto.ReviewRecord.Platform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Platform.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Platform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Platform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Platform.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getField(msg, 1),
    url: jspb.Message.getField(msg, 2),
    subjectUrl: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Platform}
 */
proto.ReviewRecord.Platform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Platform;
  return proto.ReviewRecord.Platform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Platform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Platform}
 */
proto.ReviewRecord.Platform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Platform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Platform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Platform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Platform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.ReviewRecord.Platform.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.Platform.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Platform.prototype.clearName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Platform.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string url = 2;
 * @return {string}
 */
proto.ReviewRecord.Platform.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Platform.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Platform.prototype.clearUrl = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Platform.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string subject_url = 3;
 * @return {string}
 */
proto.ReviewRecord.Platform.prototype.getSubjectUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ReviewRecord.Platform.prototype.setSubjectUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.ReviewRecord.Platform.prototype.clearSubjectUrl = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Platform.prototype.hasSubjectUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Author = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Author, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Author.displayName = 'proto.ReviewRecord.Author';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Author.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Author.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Author} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Author.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getField(msg, 1),
    platformUrl: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Author}
 */
proto.ReviewRecord.Author.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Author;
  return proto.ReviewRecord.Author.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Author} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Author}
 */
proto.ReviewRecord.Author.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Author.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Author.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Author} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Author.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.ReviewRecord.Author.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.Author.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Author.prototype.clearName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Author.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string platform_url = 2;
 * @return {string}
 */
proto.ReviewRecord.Author.prototype.getPlatformUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Author.prototype.setPlatformUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Author.prototype.clearPlatformUrl = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Author.prototype.hasPlatformUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Review = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Review, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Review.displayName = 'proto.ReviewRecord.Review';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Review.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Review.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Review} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Review.toObject = function(includeInstance, msg) {
  var f, obj = {
    datePublised: jspb.Message.getField(msg, 1),
    url: jspb.Message.getField(msg, 2),
    title: jspb.Message.getField(msg, 3),
    text: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Review}
 */
proto.ReviewRecord.Review.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Review;
  return proto.ReviewRecord.Review.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Review} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Review}
 */
proto.ReviewRecord.Review.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDatePublised(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Review.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Review.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Review} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Review.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * required uint64 date_publised = 1;
 * @return {number}
 */
proto.ReviewRecord.Review.prototype.getDatePublised = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ReviewRecord.Review.prototype.setDatePublised = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Review.prototype.clearDatePublised = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Review.prototype.hasDatePublised = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.ReviewRecord.Review.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Review.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Review.prototype.clearUrl = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Review.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string title = 3;
 * @return {string}
 */
proto.ReviewRecord.Review.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ReviewRecord.Review.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.ReviewRecord.Review.prototype.clearTitle = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Review.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string text = 4;
 * @return {string}
 */
proto.ReviewRecord.Review.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ReviewRecord.Review.prototype.setText = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.ReviewRecord.Review.prototype.clearText = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Review.prototype.hasText = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Verification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Verification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Verification.displayName = 'proto.ReviewRecord.Verification';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Verification.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Verification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Verification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Verification}
 */
proto.ReviewRecord.Verification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Verification;
  return proto.ReviewRecord.Verification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Verification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Verification}
 */
proto.ReviewRecord.Verification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Verification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Verification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Verification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Verification.Method = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Verification.Method, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Verification.Method.displayName = 'proto.ReviewRecord.Verification.Method';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Verification.Method.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Verification.Method.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Verification.Method} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.Method.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getField(msg, 1),
    provider: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Verification.Method}
 */
proto.ReviewRecord.Verification.Method.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Verification.Method;
  return proto.ReviewRecord.Verification.Method.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Verification.Method} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Verification.Method}
 */
proto.ReviewRecord.Verification.Method.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Verification.Method.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Verification.Method.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Verification.Method} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.Method.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string method = 1;
 * @return {string}
 */
proto.ReviewRecord.Verification.Method.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.Verification.Method.prototype.setMethod = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.Verification.Method.prototype.clearMethod = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Verification.Method.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string provider = 2;
 * @return {string}
 */
proto.ReviewRecord.Verification.Method.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Verification.Method.prototype.setProvider = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Verification.Method.prototype.clearProvider = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Verification.Method.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ReviewRecord.Verification.Proof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ReviewRecord.Verification.Proof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ReviewRecord.Verification.Proof.displayName = 'proto.ReviewRecord.Verification.Proof';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ReviewRecord.Verification.Proof.prototype.toObject = function(opt_includeInstance) {
  return proto.ReviewRecord.Verification.Proof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ReviewRecord.Verification.Proof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.Proof.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: (f = msg.getMethod()) && proto.ReviewRecord.Verification.Method.toObject(includeInstance, f),
    provider: jspb.Message.getField(msg, 2),
    signature: (f = msg.getSignature()) && proto.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ReviewRecord.Verification.Proof}
 */
proto.ReviewRecord.Verification.Proof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ReviewRecord.Verification.Proof;
  return proto.ReviewRecord.Verification.Proof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ReviewRecord.Verification.Proof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ReviewRecord.Verification.Proof}
 */
proto.ReviewRecord.Verification.Proof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ReviewRecord.Verification.Method;
      reader.readMessage(value,proto.ReviewRecord.Verification.Method.deserializeBinaryFromReader);
      msg.setMethod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 3:
      var value = new proto.Signature;
      reader.readMessage(value,proto.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ReviewRecord.Verification.Proof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ReviewRecord.Verification.Proof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ReviewRecord.Verification.Proof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ReviewRecord.Verification.Proof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ReviewRecord.Verification.Method.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * required Method method = 1;
 * @return {!proto.ReviewRecord.Verification.Method}
 */
proto.ReviewRecord.Verification.Proof.prototype.getMethod = function() {
  return /** @type{!proto.ReviewRecord.Verification.Method} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Verification.Method, 1, 1));
};


/** @param {!proto.ReviewRecord.Verification.Method} value */
proto.ReviewRecord.Verification.Proof.prototype.setMethod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ReviewRecord.Verification.Proof.prototype.clearMethod = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Verification.Proof.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string provider = 2;
 * @return {string}
 */
proto.ReviewRecord.Verification.Proof.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ReviewRecord.Verification.Proof.prototype.setProvider = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.Verification.Proof.prototype.clearProvider = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Verification.Proof.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required Signature signature = 3;
 * @return {!proto.Signature}
 */
proto.ReviewRecord.Verification.Proof.prototype.getSignature = function() {
  return /** @type{!proto.Signature} */ (
    jspb.Message.getWrapperField(this, proto.Signature, 3, 1));
};


/** @param {!proto.Signature} value */
proto.ReviewRecord.Verification.Proof.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ReviewRecord.Verification.Proof.prototype.clearSignature = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.Verification.Proof.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string currency_symbol = 1;
 * @return {string}
 */
proto.ReviewRecord.prototype.getCurrencySymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setCurrencySymbol = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ReviewRecord.prototype.clearCurrencySymbol = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasCurrencySymbol = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 amount = 2;
 * @return {number}
 */
proto.ReviewRecord.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ReviewRecord.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.ReviewRecord.prototype.clearAmount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string customer_address = 3;
 * @return {string}
 */
proto.ReviewRecord.prototype.getCustomerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setCustomerAddress = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.ReviewRecord.prototype.clearCustomerAddress = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasCustomerAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string vendor_address = 4;
 * @return {string}
 */
proto.ReviewRecord.prototype.getVendorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setVendorAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.ReviewRecord.prototype.clearVendorAddress = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasVendorAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string OBSOLETE_review_text = 5;
 * @return {string}
 */
proto.ReviewRecord.prototype.getObsoleteReviewText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setObsoleteReviewText = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.ReviewRecord.prototype.clearObsoleteReviewText = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasObsoleteReviewText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 OBSOLETE_rating = 6;
 * @return {number}
 */
proto.ReviewRecord.prototype.getObsoleteRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ReviewRecord.prototype.setObsoleteRating = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.ReviewRecord.prototype.clearObsoleteRating = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasObsoleteRating = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated DetailedReview detailed_review = 7;
 * @return {!Array<!proto.ReviewRecord.DetailedReview>}
 */
proto.ReviewRecord.prototype.getDetailedReviewList = function() {
  return /** @type{!Array<!proto.ReviewRecord.DetailedReview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ReviewRecord.DetailedReview, 7));
};


/** @param {!Array<!proto.ReviewRecord.DetailedReview>} value */
proto.ReviewRecord.prototype.setDetailedReviewList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ReviewRecord.DetailedReview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ReviewRecord.DetailedReview}
 */
proto.ReviewRecord.prototype.addDetailedReview = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ReviewRecord.DetailedReview, opt_index);
};


proto.ReviewRecord.prototype.clearDetailedReviewList = function() {
  this.setDetailedReviewList([]);
};


/**
 * required PoPR popr = 8;
 * @return {!proto.PoPR}
 */
proto.ReviewRecord.prototype.getPopr = function() {
  return /** @type{!proto.PoPR} */ (
    jspb.Message.getWrapperField(this, proto.PoPR, 8, 1));
};


/** @param {!proto.PoPR} value */
proto.ReviewRecord.prototype.setPopr = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.ReviewRecord.prototype.clearPopr = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasPopr = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required uint32 chlu_version = 9;
 * @return {number}
 */
proto.ReviewRecord.prototype.getChluVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ReviewRecord.prototype.setChluVersion = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.ReviewRecord.prototype.clearChluVersion = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasChluVersion = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string last_reviewrecord_multihash = 11;
 * @return {string}
 */
proto.ReviewRecord.prototype.getLastReviewrecordMultihash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setLastReviewrecordMultihash = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.ReviewRecord.prototype.clearLastReviewrecordMultihash = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasLastReviewrecordMultihash = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * required string hash = 12;
 * @return {string}
 */
proto.ReviewRecord.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setHash = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.ReviewRecord.prototype.clearHash = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasHash = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * required string signature = 13;
 * @return {string}
 */
proto.ReviewRecord.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setSignature = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.ReviewRecord.prototype.clearSignature = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string key_location = 14;
 * @return {string}
 */
proto.ReviewRecord.prototype.getKeyLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setKeyLocation = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.ReviewRecord.prototype.clearKeyLocation = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasKeyLocation = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string previous_version_multihash = 15;
 * @return {string}
 */
proto.ReviewRecord.prototype.getPreviousVersionMultihash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setPreviousVersionMultihash = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.ReviewRecord.prototype.clearPreviousVersionMultihash = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasPreviousVersionMultihash = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string OBSOLETE_customer_did_id = 16;
 * @return {string}
 */
proto.ReviewRecord.prototype.getObsoleteCustomerDidId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setObsoleteCustomerDidId = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.ReviewRecord.prototype.clearObsoleteCustomerDidId = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasObsoleteCustomerDidId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * required string id = 17;
 * @return {string}
 */
proto.ReviewRecord.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setId = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.ReviewRecord.prototype.clearId = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasId = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * required uint64 issued = 18;
 * @return {number}
 */
proto.ReviewRecord.prototype.getIssued = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.ReviewRecord.prototype.setIssued = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.ReviewRecord.prototype.clearIssued = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasIssued = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * required string issuer = 19;
 * @return {string}
 */
proto.ReviewRecord.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.ReviewRecord.prototype.setIssuer = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.ReviewRecord.prototype.clearIssuer = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * required Subject subject = 20;
 * @return {!proto.ReviewRecord.Subject}
 */
proto.ReviewRecord.prototype.getSubject = function() {
  return /** @type{!proto.ReviewRecord.Subject} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Subject, 20, 1));
};


/** @param {!proto.ReviewRecord.Subject} value */
proto.ReviewRecord.prototype.setSubject = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.ReviewRecord.prototype.clearSubject = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * required Platform platform = 21;
 * @return {!proto.ReviewRecord.Platform}
 */
proto.ReviewRecord.prototype.getPlatform = function() {
  return /** @type{!proto.ReviewRecord.Platform} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Platform, 21, 1));
};


/** @param {!proto.ReviewRecord.Platform} value */
proto.ReviewRecord.prototype.setPlatform = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.ReviewRecord.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * required Author author = 22;
 * @return {!proto.ReviewRecord.Author}
 */
proto.ReviewRecord.prototype.getAuthor = function() {
  return /** @type{!proto.ReviewRecord.Author} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Author, 22, 1));
};


/** @param {!proto.ReviewRecord.Author} value */
proto.ReviewRecord.prototype.setAuthor = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.ReviewRecord.prototype.clearAuthor = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasAuthor = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * required Review review = 23;
 * @return {!proto.ReviewRecord.Review}
 */
proto.ReviewRecord.prototype.getReview = function() {
  return /** @type{!proto.ReviewRecord.Review} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Review, 23, 1));
};


/** @param {!proto.ReviewRecord.Review} value */
proto.ReviewRecord.prototype.setReview = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


proto.ReviewRecord.prototype.clearReview = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasReview = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * required Rating rating_details = 24;
 * @return {!proto.Rating}
 */
proto.ReviewRecord.prototype.getRatingDetails = function() {
  return /** @type{!proto.Rating} */ (
    jspb.Message.getWrapperField(this, proto.Rating, 24, 1));
};


/** @param {!proto.Rating} value */
proto.ReviewRecord.prototype.setRatingDetails = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.ReviewRecord.prototype.clearRatingDetails = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasRatingDetails = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * required bool verifiable = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ReviewRecord.prototype.getVerifiable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.ReviewRecord.prototype.setVerifiable = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.ReviewRecord.prototype.clearVerifiable = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasVerifiable = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Verification verification = 26;
 * @return {?proto.ReviewRecord.Verification}
 */
proto.ReviewRecord.prototype.getVerification = function() {
  return /** @type{?proto.ReviewRecord.Verification} */ (
    jspb.Message.getWrapperField(this, proto.ReviewRecord.Verification, 26));
};


/** @param {?proto.ReviewRecord.Verification|undefined} value */
proto.ReviewRecord.prototype.setVerification = function(value) {
  jspb.Message.setWrapperField(this, 26, value);
};


proto.ReviewRecord.prototype.clearVerification = function() {
  this.setVerification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasVerification = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Signature issuer_signature = 27;
 * @return {?proto.Signature}
 */
proto.ReviewRecord.prototype.getIssuerSignature = function() {
  return /** @type{?proto.Signature} */ (
    jspb.Message.getWrapperField(this, proto.Signature, 27));
};


/** @param {?proto.Signature|undefined} value */
proto.ReviewRecord.prototype.setIssuerSignature = function(value) {
  jspb.Message.setWrapperField(this, 27, value);
};


proto.ReviewRecord.prototype.clearIssuerSignature = function() {
  this.setIssuerSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ReviewRecord.prototype.hasIssuerSignature = function() {
  return jspb.Message.getField(this, 27) != null;
};


